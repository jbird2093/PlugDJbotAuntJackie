TODO:

History Object:
user -  object - the User Object of the user who played the song in the history
room -  object - object which contains information on the votes, grabs, and audience of the song (see below)
media - object - object which contains information about the video or sound (see below)

*figure out why "bot.addSongToPlaylist(plugRoom.playlistID, currentSong.id)" does not increment the on screen "grabs"
	*do we go ahead and implement playlist organization in the bot?  multiple playlists, allow changing of that playlist, move a track in that playlist, etc....

*complete getUserId(username).   this will help in doing "/ban X" where we can either type whole name like "@JBIRD420" or substring like "JBIRD". 
	Leads to other commands like  bot.moderateBanUser(userID, reason)

*set avatar if (spkr.isStaff || spkr.isOwner || spkr.isMaster)

*if (deck and/or getWaitList.length <= 1), have selfCommand('dj');
			-may want to add an item config.onDeck - not forseen necessary at this time.
*if (deck and/or getWaitList.length > 1), have selfCommand('down');

*get gametime moved over. seek to make this variable related in that can say "/gametime r !p1 !p2 !p3" or "/gametime r !p1 !p2" and same loop recognizes number of players in this game.
			*DO NOT have this game pause when a user is removed from the wait list.  keep it free rolling.

*get getTheme() and setTheme() working to where can use a single table in database called "config"
	*allow for saving of runtime vars in database.  ease of restart. may be necessary if we can alleviate multiple instances being alowed when using "reconnect"



**IDEAS/THINKTANK
---------------------------------------------------------------------------------------------------------------------
*see if can get this to work at all.  Should require at least Co-Host rights.  bot.changeRoomOptions(false, true, config.deckPlays, 10);

*could implement this for permissions for onCommand   bot.hasPermission(userID, role)

*discover where to implement    bot.moderateBanUser(userID, reason)
	*when a user spams the room?  how do we define "spams the room"
	*definitely can say "/ban JBIRD420"  consider the easy way while typing would be "jban @JBIRD420".  since in command we recognize param = "@JBIRD420" we can use that name as leverage to discover userID




---------------------------------------------------------------------------------------------------------------------
ITEMS IN API THAT DON'T WORK
bot.on('djJoin', djJoin);
bot.on('djLeave', djLeave);
---------------------------------------------------------------------------------------------------------------------




implemetation notes:
---------------------------------------------------------------------------------------------------------------------
bot.waitListJoin();										//makes user add self to wait list
	/dj
bot.waitListLeave();									//makes user remove self from wait list
	/down


bot.moderateAddDJ(userid);								//uses bouncer+ rights to remove a user from waitlist
	/skip
bot.moderateRemoveDJ(userid);							//uses bouncer+ rights to remove a user from waitlist
	/punt
